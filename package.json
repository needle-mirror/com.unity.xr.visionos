{
  "name": "com.unity.xr.visionos",
  "displayName": "Apple visionOS XR Plugin",
  "version": "0.7.1",
  "unity": "2022.3",
  "unityRelease": "15f1",
  "description": "Provides support for Apple visionOS XR features. This includes build post-processing code and the following subsystem implementations:\n  - XRSessionSubsystem\n  - XRDisplaySubsystem\n  - XRInputSubsystem\n  - XRMeshSubsystem\n  - XRPlaneSubsystem\n  - XRImageTrackingSubsystem\n  - XRAnchorSubsystem\n  - XRHandSubsystem\nUnity PolySpatial and visionOS support is only available to Unity Pro, Unity Enterprise, and Unity Industry users. Learn more about these plans at unity.com/pricing.",
  "keywords": [
    "xreditorsubsystem"
  ],
  "dependencies": {
    "com.unity.xr.arfoundation": "5.1.0",
    "com.unity.xr.management": "4.3.3"
  },
  "_upm": {
    "changelog": "### Added\n- Added a step to the build pre-processor which disables splash screen on visionOS player builds.\n- Enabled foveated rendering for VR builds on Unity 2022.3.16f1 and above.\n- Added extension method `TryGetVisionOSRotation` to `XRHandJoint` when using the `UnityEngine.XR.VisionOS` namespace. If you depended on the rotations reported before this version, use this `TryGetVisionOSRotaiton` instead of the rotation reported from `XRHandJoint.TryGetPose`.\n\n### Changed\n- Changed the platforms behavior to report rotations of hand joints through `XRHandSubsystem` that align more closely with OpenXR's rotations. If you depended on the previous reporting of rotations, use the rotation reported by `TryGetVisionOSRotation`, a new extension method to `XRHandJoint`.\n- All packages now require 2022.3.15f1 and later (rather than 2022.3.11fa and later) to pick up fixes for various memory leaks made in 15f1.\n\n### Deprecated\n\n### Removed\n- Support for Unity versions earlier than 2022.3.11f1.\n- Removed gray \"Loading...\" window in VR builds. VR apps now launch directly into the immersive space.\n\n### Fixed\n- Fixed a linker error in Xcode when building the visionOS player with App Mode set to VR, but the visionOS loader is not enabled.\n- Fixed a memory leak in `VisionOSHandProvider`.\n- Fixed a memory leak caused by using particle systems in VR mode.\n- Implemented lifecycle management. Unity now suspends and resumes properly when the home menu is brought forward.\n- Fixed an issue where closing the gray \"Loading...\" window would mute audio.\n- Fixed an issue where spatial audio would use the gray \"Loading...\" window as its source location.\n\n### Security"
  },
  "upmCi": {
    "footprint": "503e34cbaad09340839d74f5517e5a7aeb2d4b75"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.visionos@0.7/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/quantum.git",
    "type": "git",
    "revision": "9380fa90b9beccee80c464f367b54c02c71c3642"
  },
  "samples": [
    {
      "displayName": "VR Sample - Built-in",
      "description": "A sample scene and supporting assets for the built-in render pipeline demonstrating VR features.",
      "path": "Samples~/VRSampleBuiltin"
    },
    {
      "displayName": "VR Sample - URP",
      "description": "A sample scene and supporting assets for the Universal Render Pipeline demonstrating VR features.",
      "path": "Samples~/VRSampleURP"
    }
  ]
}
