{
  "name": "com.unity.xr.visionos",
  "displayName": "Apple visionOS XR Plugin",
  "version": "2.1.2",
  "unity": "6000.0",
  "unityRelease": "22f1",
  "description": "Provides support for Apple visionOS XR features. This includes build post-processing code and the following subsystem implementations:\n  - XRSessionSubsystem\n  - XRDisplaySubsystem\n  - XRInputSubsystem\n  - XRMeshSubsystem\n  - XRPlaneSubsystem\n  - XRImageTrackingSubsystem\n  - XRAnchorSubsystem\n  - XRHandSubsystem\nUnity PolySpatial and visionOS support is only available to Unity Pro, Unity Enterprise, and Unity Industry users. Learn more about these plans at unity.com/pricing.",
  "keywords": [
    "xreditorsubsystem"
  ],
  "dependencies": {
    "com.unity.xr.core-utils": "2.3.0",
    "com.unity.xr.arfoundation": "6.0.3",
    "com.unity.xr.management": "4.5.0"
  },
  "samples": [
    {
      "displayName": "Metal Sample - Built-in",
      "description": "A sample scene and supporting assets for the built-in render pipeline demonstrating Metal app mode features. This sample requires the XR Interaction Toolkit to be added to your project.",
      "path": "Samples~/MetalSampleBuiltin"
    },
    {
      "displayName": "Metal Sample - URP",
      "description": "A sample scene and supporting assets for the Universal Render Pipeline demonstrating Metal app mode features. This sample requires the XR Interaction Toolkit to be added to your project.",
      "path": "Samples~/MetalSampleURP"
    }
  ],
  "_upm": {
    "changelog": "### Added\n- Consolidated the documentation for the Apple visionOS XR Plug-in settings into a single page located at `visionOS Platform Overview > visionOS Settings`.\n- Added Object Tracking support.\n- Added `Use AC Tool` setting under `Project Settings > XR Plug-in Management > Apple visionOS` to make compiling reference image libraries with actool optional. This step can be done later in the Xcode project, and can fail sometimes, interrupting Build and Run.\n\n### Changed\n- Quit button in sample scene is marked non-interactable in play mode to make it clear that it doesn't have any effect (`Application.Quit` doesn't do anything in play mode).\n- Skip processing image marker libraries that are not included in the build.\n\n### Deprecated\n\n### Removed\n\n### Fixed\n- Fixed an issue where requesting a volume size that was too large or too small when connected to PlayToDevice could result in a loop of WindowStateChanged event invocations.\n- Fixed an issue in `MetalSampleURP/Shaders/UnlitTransparentColor.shader` where it was writing alpha values to the framebuffer, causing pass-through to bleed through AR planes in the URP sample scene.\n\n### Security"
  },
  "upmCi": {
    "footprint": "8c46438e6f3322ba311482583e6392c02baad2bc"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.visionos@2.1/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/polyspatial.git",
    "type": "git",
    "revision": "83504314d8b6c254f26c60939db39a20d96757ac"
  }
}
