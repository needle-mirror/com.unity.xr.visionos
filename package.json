{
  "name": "com.unity.xr.visionos",
  "displayName": "Apple visionOS XR Plugin",
  "version": "2.0.4",
  "unity": "6000.0",
  "unityRelease": "22f1",
  "description": "Provides support for Apple visionOS XR features. This includes build post-processing code and the following subsystem implementations:\n  - XRSessionSubsystem\n  - XRDisplaySubsystem\n  - XRInputSubsystem\n  - XRMeshSubsystem\n  - XRPlaneSubsystem\n  - XRImageTrackingSubsystem\n  - XRAnchorSubsystem\n  - XRHandSubsystem\nUnity PolySpatial and visionOS support is only available to Unity Pro, Unity Enterprise, and Unity Industry users. Learn more about these plans at unity.com/pricing.",
  "keywords": [
    "xreditorsubsystem"
  ],
  "dependencies": {
    "com.unity.xr.core-utils": "2.3.0",
    "com.unity.xr.arfoundation": "6.0.3",
    "com.unity.xr.management": "4.5.0"
  },
  "samples": [
    {
      "displayName": "Metal Sample - Built-in",
      "description": "A sample scene and supporting assets for the built-in render pipeline demonstrating Metal app mode features. This sample requires the XR Interaction Toolkit to be added to your project.",
      "path": "Samples~/MetalSampleBuiltin"
    },
    {
      "displayName": "Metal Sample - URP",
      "description": "A sample scene and supporting assets for the Universal Render Pipeline demonstrating Metal app mode features. This sample requires the XR Interaction Toolkit to be added to your project.",
      "path": "Samples~/MetalSampleURP"
    }
  ],
  "_upm": {
    "changelog": "### Added\n- Added `metalImmersiveOverlays` and `realityKitImmersiveOverlays` settings to `VisionOSSettings`, which allow hiding the visionOS hand gesture menus in immersive spaces.\n\n### Changed\n- Update minimum Editor version to 6000.0.22f1.\n\n### Deprecated\n\n### Removed\n\n### Fixed\n- Fixed Windows long path error when processing ARReferenceImage's build postprocessor.\n- Called EditorUtility.ClearProgressBar(); when finished processing visionOS reference image library assets to clear progress bar.\n- Fixed hand tracking lag by returning CACurrentMediaTime instead of 0 from `NativeApi.HandTracking.GetLatestHandTrackingTiming` when no LayerRenderer is active (for example when using PolySpatial).\n- Fixed potential NullReferenceExceptions in build processors.\n- Fixed a missing script on the AR Controls prefab in the built-in sample.\n\n### Security"
  },
  "upmCi": {
    "footprint": "de839d101e3b2ef448d8968d0933fa0b65344fd8"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.visionos@2.0/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/quantum.git",
    "type": "git",
    "revision": "f1ff4502685c7c85fb07a1997f1cd553ba4dcbe6"
  }
}
